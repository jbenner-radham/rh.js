{"ts":1349093831505,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"xmlRequest = ->  \n  return new XMLHttpRequest()\n\nxmlRequestParams = (page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) ->\n  xmlParams =\n    page: page or null\n    callbackFunc: callbackFunc or null\n    asynchronous: asynchronous or true\n    sendStr: sendStr or null\n    httpMethod: httpMethod or 'GET'\n    responseType: responseType or null\n  return xmlParams\n\ngetXmlRequest = (page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) ->  \n  request = new xmlRequest()\n  params = xmlRequestParams page, callbackFunc, asynchronous, sendStr, httpMethod, responseType \n  request.open params['httpMethod'], params['page'], params['asynchronous']\n  request.send params['sendStr']\n  request.onreadystatechange = ->\n    if request.readyState is 4 and request.status is 200\n      switch params['responseType']\n        when 'json'\n          callbackFunc JSON.parse request.responseText\n        when 'text', null\n          callbackFunc request.responseText\n      \ngetJson = (page, callbackFunc, asynchronous, sendStr, httpMethod) ->  \n  getXmlRequest(page, callbackFunc, asynchronous, sendStr, httpMethod, 'json')\n\ngetText = (page, callbackFunc, asynchronous, sendStr, httpMethod) ->  \n  getXmlRequest(page, callbackFunc, asynchronous, sendStr, httpMethod, 'text')\n\ncallbackResponse = (requestReturn) ->\n  switch typeof requestReturn\n    when 'object'\n      for x of requestReturn\n        console.log requestReturn[x]\n    when 'string'\n      console.log requestReturn\n\n# Test functions...\n#getJson 'echo.php', callbackResponse\n#getText 'echo.php', callbackResponse"]],"start1":0,"start2":0,"length1":0,"length2":1585}]],"length":1585}
{"contributors":[],"silentsave":false,"ts":1349133712496,"patch":[[{"diffs":[[0,"est = ->"],[-1,"  "],[0,""],[1,""],[0,"\n  retur"]],"start1":7,"start2":7,"length1":18,"length2":16},{"diffs":[[0,"Type) ->"],[-1,"  "],[0,""],[1,""],[0,"\n  reque"]],"start1":458,"start2":458,"length1":18,"length2":16},{"diffs":[[0,"n params"],[-1,"['"],[1,"."],[0,"httpMeth"]],"start1":606,"start2":606,"length1":18,"length2":17},{"diffs":[[0,"thod"],[-1,"']"],[0,", params"],[-1,"['"],[1,"."],[0,"page"],[-1,"']"],[0,", params"],[-1,"['"],[1,"."],[0,"asyn"]],"start1":621,"start2":621,"length1":36,"length2":30},{"diffs":[[0,"chronous"],[-1,"']"],[0,"\n  reque"]],"start1":651,"start2":651,"length1":18,"length2":16},{"diffs":[[0,"rams"],[-1,"['"],[1,"."],[0,"sendStr"],[-1,"']"],[0,"\n  r"]],"start1":677,"start2":677,"length1":19,"length2":16},{"diffs":[[0,"rams"],[-1,"['"],[1,"."],[0,"resp"]],"start1":796,"start2":796,"length1":10,"length2":9},{"diffs":[[0,"Type"],[-1,"']"],[0,"\n   "]],"start1":809,"start2":809,"length1":10,"length2":8},{"diffs":[[0,"t\n      "],[1,"    "],[0,"\ngetJson"]],"start1":957,"start2":957,"length1":16,"length2":20},{"diffs":[[0,", httpMethod) ->"],[-1,"  "],[0,"\n  getXmlRequest"]],"start1":1022,"start2":1022,"length1":34,"length2":32},{"diffs":[[0,"\n  getXmlRequest"],[-1,"("],[1," "],[0,"page, callbackFu"]],"start1":1038,"start2":1038,"length1":33,"length2":33},{"diffs":[[0,", 'json'"],[-1,")"],[0,"\n\ngetTex"]],"start1":1108,"start2":1108,"length1":17,"length2":16},{"diffs":[[0,"lRequest"],[-1,"("],[1," "],[0,"page, ca"]],"start1":1196,"start2":1196,"length1":17,"length2":17},{"diffs":[[0,", 'text'"],[-1,")"],[0,"\n\ncallba"]],"start1":1258,"start2":1258,"length1":17,"length2":16},{"diffs":[[0,"stReturn"],[-1,""],[0,""],[1,"\n      \ndomPurgeChildren = (domElement) ->\n  while domElement.childNodes.length >= 1\n    domElement.removeChild domElement.firstChild"],[0,"\n\n# Test"]],"start1":1461,"start2":1461,"length1":16,"length2":149}]],"length":1699,"saved":false}
