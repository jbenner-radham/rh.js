{"ts":1349093831505,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"xmlRequest = ->  \n  return new XMLHttpRequest()\n\nxmlRequestParams = (page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) ->\n  xmlParams =\n    page: page or null\n    callbackFunc: callbackFunc or null\n    asynchronous: asynchronous or true\n    sendStr: sendStr or null\n    httpMethod: httpMethod or 'GET'\n    responseType: responseType or null\n  return xmlParams\n\ngetXmlRequest = (page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) ->  \n  request = new xmlRequest()\n  params = xmlRequestParams page, callbackFunc, asynchronous, sendStr, httpMethod, responseType \n  request.open params['httpMethod'], params['page'], params['asynchronous']\n  request.send params['sendStr']\n  request.onreadystatechange = ->\n    if request.readyState is 4 and request.status is 200\n      switch params['responseType']\n        when 'json'\n          callbackFunc JSON.parse request.responseText\n        when 'text', null\n          callbackFunc request.responseText\n      \ngetJson = (page, callbackFunc, asynchronous, sendStr, httpMethod) ->  \n  getXmlRequest(page, callbackFunc, asynchronous, sendStr, httpMethod, 'json')\n\ngetText = (page, callbackFunc, asynchronous, sendStr, httpMethod) ->  \n  getXmlRequest(page, callbackFunc, asynchronous, sendStr, httpMethod, 'text')\n\ncallbackResponse = (requestReturn) ->\n  switch typeof requestReturn\n    when 'object'\n      for x of requestReturn\n        console.log requestReturn[x]\n    when 'string'\n      console.log requestReturn\n\n# Test functions...\n#getJson 'echo.php', callbackResponse\n#getText 'echo.php', callbackResponse"]],"start1":0,"start2":0,"length1":0,"length2":1585}]],"length":1585}
{"contributors":[],"silentsave":false,"ts":1349133712496,"patch":[[{"diffs":[[0,"est = ->"],[-1,"  "],[0,""],[1,""],[0,"\n  retur"]],"start1":7,"start2":7,"length1":18,"length2":16},{"diffs":[[0,"Type) ->"],[-1,"  "],[0,""],[1,""],[0,"\n  reque"]],"start1":458,"start2":458,"length1":18,"length2":16},{"diffs":[[0,"n params"],[-1,"['"],[1,"."],[0,"httpMeth"]],"start1":606,"start2":606,"length1":18,"length2":17},{"diffs":[[0,"thod"],[-1,"']"],[0,", params"],[-1,"['"],[1,"."],[0,"page"],[-1,"']"],[0,", params"],[-1,"['"],[1,"."],[0,"asyn"]],"start1":621,"start2":621,"length1":36,"length2":30},{"diffs":[[0,"chronous"],[-1,"']"],[0,"\n  reque"]],"start1":651,"start2":651,"length1":18,"length2":16},{"diffs":[[0,"rams"],[-1,"['"],[1,"."],[0,"sendStr"],[-1,"']"],[0,"\n  r"]],"start1":677,"start2":677,"length1":19,"length2":16},{"diffs":[[0,"rams"],[-1,"['"],[1,"."],[0,"resp"]],"start1":796,"start2":796,"length1":10,"length2":9},{"diffs":[[0,"Type"],[-1,"']"],[0,"\n   "]],"start1":809,"start2":809,"length1":10,"length2":8},{"diffs":[[0,"t\n      "],[1,"    "],[0,"\ngetJson"]],"start1":957,"start2":957,"length1":16,"length2":20},{"diffs":[[0,", httpMethod) ->"],[-1,"  "],[0,"\n  getXmlRequest"]],"start1":1022,"start2":1022,"length1":34,"length2":32},{"diffs":[[0,"\n  getXmlRequest"],[-1,"("],[1," "],[0,"page, callbackFu"]],"start1":1038,"start2":1038,"length1":33,"length2":33},{"diffs":[[0,", 'json'"],[-1,")"],[0,"\n\ngetTex"]],"start1":1108,"start2":1108,"length1":17,"length2":16},{"diffs":[[0,"lRequest"],[-1,"("],[1," "],[0,"page, ca"]],"start1":1196,"start2":1196,"length1":17,"length2":17},{"diffs":[[0,", 'text'"],[-1,")"],[0,"\n\ncallba"]],"start1":1258,"start2":1258,"length1":17,"length2":16},{"diffs":[[0,"stReturn"],[-1,""],[0,""],[1,"\n      \ndomPurgeChildren = (domElement) ->\n  while domElement.childNodes.length >= 1\n    domElement.removeChild domElement.firstChild"],[0,"\n\n# Test"]],"start1":1461,"start2":1461,"length1":16,"length2":149}]],"length":1699,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349308304490,"patch":[[{"diffs":[[-1,"xmlRequest = ->\n  return new XMLHttpRequest()\n\nxmlRequestParams = (page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) ->\n  xmlP"],[1,"rhXhr =\n  xhr: ->\n    new XMLHttpRequest()\n\n  p"],[0,"arams"],[-1," ="],[1,":"],[0,"\n   "]],"start1":0,"start2":0,"length1":156,"length2":57},{"diffs":[[0,"age:"],[-1," page or"],[0," nul"]],"start1":59,"start2":59,"length1":16,"length2":8},{"diffs":[[0,"unc:"],[-1," callbackFunc or"],[0," nul"]],"start1":82,"start2":82,"length1":24,"length2":8},{"diffs":[[0,"ous:"],[-1," asynchronous or"],[0," tru"]],"start1":105,"start2":105,"length1":24,"length2":8},{"diffs":[[0,"Str:"],[-1," sendStr or"],[0," nul"]],"start1":123,"start2":123,"length1":19,"length2":8},{"diffs":[[0,"hod:"],[-1," httpMethod or"],[0," 'GE"]],"start1":144,"start2":144,"length1":22,"length2":8},{"diffs":[[0,"ype:"],[-1," responseType or"],[0," null\n"],[1,"\n"],[0,"  "],[-1,"return xmlParams\n\ngetXml"],[1,"xhr"],[0,"Request"],[-1," ="],[1,":"],[0," (pa"]],"start1":168,"start2":168,"length1":65,"length2":28},{"diffs":[[0,"ype) ->\n"],[1,"  "],[0,"  reques"]],"start1":258,"start2":258,"length1":16,"length2":18},{"diffs":[[0,"new "],[-1,"xmlRequest()\n  params = xmlRequestParams page, callbackFunc, asynchronous, sendStr, httpMethod, responseType \n"],[1,"@xhr()\n    p = @params\n  "],[0,"  re"]],"start1":280,"start2":280,"length1":118,"length2":33},{"diffs":[[0,"st.open "],[1,"@"],[0,"params.h"]],"start1":316,"start2":316,"length1":16,"length2":17},{"diffs":[[0,"Method, "],[1,"@"],[0,"params.p"]],"start1":336,"start2":336,"length1":16,"length2":17},{"diffs":[[0,"s.page, "],[1,"@"],[0,"params.a"]],"start1":350,"start2":350,"length1":16,"length2":17},{"diffs":[[0,"hronous\n"],[1,"  "],[0,"  reques"]],"start1":371,"start2":371,"length1":16,"length2":18},{"diffs":[[0,"st.send "],[1,"@"],[0,"params.s"]],"start1":388,"start2":388,"length1":16,"length2":17},{"diffs":[[0,"sendStr\n"],[1,"  "],[0,"  reques"]],"start1":404,"start2":404,"length1":16,"length2":18},{"diffs":[[0,"change = ->\n"],[1,"      # @/this takes on a different value here since it's inside the onreadystatechange method.\n  "],[0,"    if reque"]],"start1":436,"start2":436,"length1":24,"length2":122},{"diffs":[[0,"    "],[1,"  "],[0,"switch p"],[-1,"arams"],[0,".res"]],"start1":605,"start2":605,"length1":21,"length2":18},{"diffs":[[0,"    "],[1," "],[1," "],[0,"when "],[-1,"'"],[1,"\""],[0,"json"],[-1,"'\n"],[1,"\"\n  "],[0,"    "]],"start1":637,"start2":637,"length1":20,"length2":24},{"diffs":[[0,"on\"\n            "],[1,"p."],[0,"callbackFunc JSO"]],"start1":651,"start2":651,"length1":32,"length2":34},{"diffs":[[0,"ON.parse"],[-1," "],[1,"("],[0,"request."]],"start1":684,"start2":684,"length1":17,"length2":17},{"diffs":[[0,"est.responseText"],[-1,"\n"],[1,")\n  "],[0,"        when 'te"]],"start1":697,"start2":697,"length1":33,"length2":36},{"diffs":[[0,"   when "],[-1,"'"],[1,"\""],[0,"text"],[-1,"'"],[1,"\""],[0,", null\n "]],"start1":722,"start2":722,"length1":22,"length2":22},{"diffs":[[0,"l\n          "],[1,"  p."],[0,"callbackFunc"]],"start1":741,"start2":741,"length1":24,"length2":28},{"diffs":[[0,"ext\n"],[-1,"        "],[1,"\n"],[0,"  "],[-1,"\n"],[0,"get"],[-1,"Json ="],[1,"Text:"],[0," (pa"]],"start1":787,"start2":787,"length1":28,"length2":19},{"diffs":[[0,"synchronous,"],[-1," sendStr,"],[0," httpMethod)"]],"start1":825,"start2":825,"length1":33,"length2":24},{"diffs":[[0,">\n  "],[-1,"getXmlRequest page, callbackFunc, asynchronous, sendStr, httpMethod, 'json'\n\ngetText ="],[1,"  p = @params\n    p.page = page or null\n    p.callbackFunc = callbackFunc or null\n    p.responseType = 'text'\n    @xhrRequest()\n\n  getJson:"],[0," (pa"]],"start1":851,"start2":851,"length1":94,"length2":147},{"diffs":[[0,"synchronous,"],[-1," sendStr,"],[0," httpMethod)"]],"start1":1017,"start2":1017,"length1":33,"length2":24},{"diffs":[[0,") ->"],[-1,"  \n  getXmlRequest page, callbackFunc, asynchronous, sendStr, httpMethod, 'text'\n\ncallbackResponse = (requestReturn) ->\n  switch typeof requestReturn\n    when 'object'\n      for x of requestReturn\n        console.log requestReturn[x]\n    when 'string'\n      console.log requestReturn\n      "],[1,"\n    p = @params\n    p.page = page or null\n    p.callbackFunc = callbackFunc or null\n    p.responseType = 'json'\n    @xhrRequest()\n\n###"],[0,"\ndom"]],"start1":1040,"start2":1040,"length1":298,"length2":143},{"diffs":[[0,"rstChild"],[-1,""],[0,""],[1,"\n###"],[0,"\n\n# Test"]],"start1":1297,"start2":1297,"length1":16,"length2":20}]],"length":1406,"saved":false}
{"contributors":[],"silentsave":false,"ts":1349938389066,"patch":[[{"diffs":[[1,"###\nThis file is part of rh.js.\n\nrh.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nrh.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with rh.js.  If not, see <http://www.gnu.org/licenses/>.\n###\n\n"],[0,"rhXhr =\n"]],"start1":0,"start2":0,"length1":8,"length2":637}]],"length":2035,"saved":false}
{"ts":1349938437847,"patch":[[{"diffs":[[0,"###"],[1,"-------------------------------------------------------------------"],[0,"\nThis fi"]],"start1":0,"start2":0,"length1":11,"length2":78},{"diffs":[[0,"nses/>.\n"],[1,"------------------------------------------------------------------"],[0,"###\n\nrhX"]],"start1":683,"start2":683,"length1":16,"length2":82}]],"length":2168,"saved":false}
