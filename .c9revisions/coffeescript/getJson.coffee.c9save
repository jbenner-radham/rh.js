{"ts":1349093831505,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"xmlRequest = ->  \n  return new XMLHttpRequest()\n\nxmlRequestParams = (page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) ->\n  xmlParams =\n    page: page or null\n    callbackFunc: callbackFunc or null\n    asynchronous: asynchronous or true\n    sendStr: sendStr or null\n    httpMethod: httpMethod or 'GET'\n    responseType: responseType or null\n  return xmlParams\n\ngetXmlRequest = (page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) ->  \n  request = new xmlRequest()\n  params = xmlRequestParams page, callbackFunc, asynchronous, sendStr, httpMethod, responseType \n  request.open params['httpMethod'], params['page'], params['asynchronous']\n  request.send params['sendStr']\n  request.onreadystatechange = ->\n    if request.readyState is 4 and request.status is 200\n      switch params['responseType']\n        when 'json'\n          callbackFunc JSON.parse request.responseText\n        when 'text', null\n          callbackFunc request.responseText\n      \ngetJson = (page, callbackFunc, asynchronous, sendStr, httpMethod) ->  \n  getXmlRequest(page, callbackFunc, asynchronous, sendStr, httpMethod, 'json')\n\ngetText = (page, callbackFunc, asynchronous, sendStr, httpMethod) ->  \n  getXmlRequest(page, callbackFunc, asynchronous, sendStr, httpMethod, 'text')\n\ncallbackResponse = (requestReturn) ->\n  switch typeof requestReturn\n    when 'object'\n      for x of requestReturn\n        console.log requestReturn[x]\n    when 'string'\n      console.log requestReturn\n\n# Test functions...\n#getJson 'echo.php', callbackResponse\n#getText 'echo.php', callbackResponse"]],"start1":0,"start2":0,"length1":0,"length2":1585}]],"length":1585}
