{"ts":1349180573119,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var getJSON = function(page, callbackFunc, sendStr, httpMethod) {\n    sendStr = sendStr || null;\n\thttpMethod = httpMethod || 'GET';\n\tvar request = new XMLHttpRequest();\n\trequest.open(httpMethod, page, true);\n\trequest.send(sendStr);\n\trequest.onreadystatechange = function() {\n        if (request.readyState == 4 && request.status == 200) {\n            callbackFunc(JSON.parse(request.responseText));\n        }\n    };\n};\n\nvar cbJson = function(returnJson) {\n\tfor (var x in returnJson) {\n\t\tconsole.log(returnJson[x]);\n\t}\n};\n\ngetJSON('echo.php', cbJson);"]],"start1":0,"start2":0,"length1":0,"length2":550}]],"length":550}
{"contributors":[],"silentsave":false,"ts":1349218030977,"patch":[[{"diffs":[[1,"var rhXhr = {\n    \n\txhr: function() {\n\t\treturn new XMLHttpRequest();\n\t},\n\t\n\txhrParams: function(page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) {\n\t\t/*\n\t\tvar _method = this.xhrParams;\n\t\t_method.page = page || null;\n\t\t_method.callbackFunc = callbackFunc || null;\n\t\t_method.asynchronous = asynchronous || true;\n\t\t_method.sendStr = sendStr || null;\n\t\t_method.httpMethod = httpMethod || 'GET';\n\t\t_method.responseType = responseType || null;\n\t\t*/\n\t\tvar paramsObj = {\n\t\t\tpage: page || null,\n            callbackFunc: callbackFunc || null,\n            asynchronous: asynchronous || true,\n            sendStr: sendStr || null,\n            httpMethod: httpMethod || 'GET',\n            responseType: responseType || null\n\t\t};\n\t\treturn paramsObj;\n\t},\n\t\n\txhrRequest: function(page, callbackFunc, asynchronous, sendStr, httpMethod, responseType) {\n\t\tvar params, request;\n        request = new this.xhr();\n\t\tparams = this.xhrParams(page, callbackFunc, asynchronous, sendStr, httpMethod, responseType);\n        request.open(params.httpMethod, params.page, params.asynchronous);\n        request.send(params.sendStr);\n        return request.onreadystatechange = function() {\n            if (request.readyState === 4 && request.status === 200) {\n                switch (params.responseType) {\n                    case 'json':\n                        return callbackFunc(JSON.parse(request.responseText));\n                    case 'text':\n                    case null:\n                        return callbackFunc(request.responseText);\n                }\n            }\n        };\n    },\n\t\n\ttest2: function() {\n\t\tconsole.log('test2');\n\t},\n\n\ttestParams: function() {\n\t\tconsole.log(this.xhrParams.page);\n\t},\n\t\n\tgetText: function(page, callbackFunc, asynchronous, sendStr, httpMethod) {\n\t\tthis.xhrRequest(page, callbackFunc, asynchronous, sendStr, httpMethod, 'text');\n\t},\n\t\n\tgetJson: function(page, callbackFunc, asynchronous, sendStr, httpMethod) {\n\t\tthis.xhrRequest(page, callbackFunc, asynchronous, sendStr, httpMethod, 'json');\n\t}\n\n};\n\nvar cbJson = function(returnJson) {\n\t//console.log(returnJson);\n\tfor (var x in returnJson) {\n\t\tconsole.log(returnJson[x]);\n\t}\n};\n\n/*\nfor (var key in rhXhr) {\n  // if the keys belongs to object and it is a function\n  if (rhXhr.hasOwnProperty(key) && (typeof rhXhr[key] === 'function')) {\n    console.log(key);\n  }\n}\n*/\n//rhXhr.xhrParams();\n//rhXhr.testParams();\n\nrhXhr.getJson('echo.php', cbJson);\n\n\n/*\n"],[0,"var getJSON "]],"start1":0,"start2":0,"length1":12,"length2":2452},{"diffs":[[0,"getJSON('echo.php', cbJson);"],[1,"\n*/"]],"start1":2962,"start2":2962,"length1":28,"length2":31}]],"length":2993,"saved":false}
